name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --debug

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ahuservices
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image for testing
      id: build_image
      run: |
        docker buildx create --use --name mybuilder
        docker buildx inspect mybuilder --bootstrap
        docker buildx build --target test --platform linux/${{ matrix.arch }} --tag cs-image-tools:${{ github.sha }}-${{ matrix.arch }} --output type=docker .

    - name: Run tests
      run: |
        docker run --rm cs-image-tools:${{ github.sha }}-${{ matrix.arch }}

  multi-arch-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'release'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --debug

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ahuservices
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push multi-arch Docker image
      run: |
        docker buildx create --use --name mybuilder
        docker buildx inspect mybuilder --bootstrap
        docker buildx build --platform linux/amd64,linux/arm64 --tag ahuservices/cs-image-tools:latest --tag ahuservices/cs-image-tools:${{ github.ref_name }} --push .
